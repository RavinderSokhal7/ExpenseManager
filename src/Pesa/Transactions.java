package Pesa;


import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ravinder's PC
 */
public class Transactions extends javax.swing.JFrame {
    private final Expense User;
    public String InttoMonth(int a)
    {
        a++;
        String s="";
        switch (a)
        {
            case 1: s="January";
            break;
            case 2: s= "February";
            break;
            case 3: s= "March";
            break;
            case 4: s="April";
            break;
            case 5: s="May";
            break;
            case 6: s="June";
            break;
            case 7: s="July";
            break;
            case 8: s="August";
            break;
            case 9: s="September";
            break;
            case 10: s="October";
            break;
            case 11: s="November";
            break;
            case 12: s="December";
            break;
            
        }
        return s;
    }
    public void setUserL(String s)
    {
        this.user.setText(s);
    }
    public void setUserT(String s)//, Double b)
    {
        this.User.setName(s);
        //this.User.setBal(b);
    }
    public void setTableContent(ResultSet rs)
    {
        DefaultTableModel tmodel=(DefaultTableModel) this.jTable1.getModel();
        try{
        while(rs.next())
        {
            String TType = rs.getString("Type");
            Double TAmount = rs.getDouble("Amount");
            String TReason = rs.getString("Reason");
            String TDes = rs.getString("Description");
            //SimpleDateFormat sdf = new SimpleDateFormat("dd MMM YYYY");
            String Tdate = rs.getString("Date");
            tmodel.addRow(new Object[]{TType,TAmount,TReason,TDes,Tdate});
        }}
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(this,e.getMessage());
        }
    }
    /**
     * Creates new form Transactions
     */
    public Transactions() {
        initComponents();
        User = new Expense();
        Toolkit tk=Toolkit.getDefaultToolkit();
        int sht=(int)tk.getScreenSize().getHeight();
        int swd=(int)tk.getScreenSize().getWidth();
        int ht=590;
        int wd=760;
        int x=swd-wd;
        int y=sht-ht;
        this.setBounds(x/2, y/2, wd, ht);
        this.setTitle("Expense Manager");//*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        user = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BackB = new javax.swing.JButton();
        MonthL = new com.toedter.calendar.JMonthChooser();
        YearL = new com.toedter.calendar.JYearChooser();
        jButton1 = new javax.swing.JButton();
        SelCB = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        user.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        user.setForeground(new java.awt.Color(0, 153, 51));
        user.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Transactions for", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 102, 0))); // NOI18N
        user.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Transaction Type", "Transaction Amount", "Transaction Reason", "Description", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setEnabled(false);
        jScrollPane1.setViewportView(jTable1);

        BackB.setText("Back ");
        BackB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBActionPerformed(evt);
            }
        });

        jButton1.setText("Show For this");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        SelCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Show Only -", "Expense", "Income" }));
        SelCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(BackB, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SelCB, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                            .addComponent(MonthL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(YearL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(22, Short.MAX_VALUE)
                        .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(YearL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MonthL, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BackB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SelCB, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBActionPerformed
        // TODO add your handling code here:
        LoggedIn loggedin = new LoggedIn();
        loggedin.show();
        loggedin.setUser(User.getName());
        //loggedin.setExpenseL(Double.toString(User.getBal()));
        this.dispose();
    }//GEN-LAST:event_BackBActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Connection con;
        Statement stmt;
        ResultSet rs;
        try
        {
            DefaultTableModel tmodel=(DefaultTableModel) this.jTable1.getModel();
            tmodel.setRowCount(0);
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/expensemanager3","root","password");
            stmt = con.createStatement();
            String sql = "Select `Type`,`Amount`,`Reason`,`Description`,`Date` from transactions where `UID`='"+user.getText()+"' AND `Month` = '"+InttoMonth(MonthL.getMonth())+"' AND `Year`='"+Integer.toString(YearL.getYear())+"';";
            rs = stmt.executeQuery(sql);
            if(!rs.next()){
                JOptionPane.showMessageDialog(this,"No Transactions For this Month!");
            }
            else
            {
                tmodel=(DefaultTableModel) this.jTable1.getModel();
                try{
                        String TType = rs.getString("Type");
                        Double TAmount = rs.getDouble("Amount");
                        String TReason = rs.getString("Reason");
                        String TDes = rs.getString("Description");
                        //SimpleDateFormat sdf = new SimpleDateFormat("dd MMM YYYY");
                        String Tdate = rs.getString("Date");
                        tmodel.addRow(new Object[]{TType,TAmount,TReason,TDes,Tdate});
                    while(rs.next())
                    {
                        TType = rs.getString("Type");
                        TAmount = rs.getDouble("Amount");
                        TReason = rs.getString("Reason");
                        TDes = rs.getString("Description");
                        //SimpleDateFormat sdf = new SimpleDateFormat("dd MMM YYYY");
                        Tdate = rs.getString("Date");
                        tmodel.addRow(new Object[]{TType,TAmount,TReason,TDes,Tdate});
                    }}
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(this,e.getMessage());
                }
            }
            rs.close();
            stmt.close();
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void SelCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelCBActionPerformed
        // TODO add your handling code here:
        Connection con;
        Statement stmt;
        ResultSet rs;
        try
        {
            DefaultTableModel tmodel=(DefaultTableModel) this.jTable1.getModel();
            tmodel.setRowCount(0);
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/expensemanager3","root","password");
            stmt = con.createStatement();
            String sql = "";
            if(SelCB.getSelectedItem().toString().equals("Show Only -"))
                    {
                        sql = "Select `Type`,`Amount`,`Reason`,`Description`,`Date` from transactions where `UID`='"+user.getText()+"' AND `Month` = '"+InttoMonth(MonthL.getMonth())+"' AND `Year`='"+Integer.toString(YearL.getYear())+"';";
                    }
            else{
                    sql = "Select `Type`,`Amount`,`Reason`,`Description`,`Date` from transactions where `UID`='"+user.getText()+"' AND `Month` = '"+InttoMonth(MonthL.getMonth())+"' AND `Year`='"+Integer.toString(YearL.getYear())+"' AND `Type` ='"+SelCB.getSelectedItem().toString()+"';";
            }
            rs = stmt.executeQuery(sql);
            if(rs!=null){
                //DefaultTableModel tmodel=(DefaultTableModel) this.jTable1.getModel();
                try{
                while(rs.next())
                {
                    String TType = rs.getString("Type");
                    Double TAmount = rs.getDouble("Amount");
                    String TReason = rs.getString("Reason");
                    String TDes = rs.getString("Description");
                    //SimpleDateFormat sdf = new SimpleDateFormat("dd MMM YYYY");
                    String Tdate = rs.getString("Date");
                    tmodel.addRow(new Object[]{TType,TAmount,TReason,TDes,Tdate});
                }}
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(this,e.getMessage());
                }            
            }
            rs.close();
            stmt.close();
            con.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_SelCBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transactions().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackB;
    private com.toedter.calendar.JMonthChooser MonthL;
    private javax.swing.JComboBox<String> SelCB;
    private com.toedter.calendar.JYearChooser YearL;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel user;
    // End of variables declaration//GEN-END:variables
}
